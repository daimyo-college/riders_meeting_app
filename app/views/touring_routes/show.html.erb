<p id="notice"><%= notice %></p>
<p>
  <strong>Touring id:</strong>
  <%= @touring_route.id %>
</p>
<p>
  <strong>Touring name:</strong>
  <%= @touring_route.touring_name %>
</p>

<p>
  <strong>Touring desc:</strong>
  <%= @touring_route.touring_desc %>
</p>

<p>
  <strong>Start date:</strong>
  <%= @touring_route.start_date %>
</p>

<p>
  <strong>End date:</strong>
  <%= @touring_route.end_date %>
</p>

<p>
  <strong>Start lat:</strong>
  <%= @touring_route.start_lat %>
</p>

<p>
  <strong>Start lon:</strong>
  <%= @touring_route.start_lon %>
</p>

<p>
  <strong>End lat:</strong>
  <%= @touring_route.end_lat %>
</p>

<p>
  <strong>End lon:</strong>
  <%= @touring_route.end_lon %>
</p>

<p>
  <strong>Wp1 lat:</strong>
  <%= @touring_route.wp1_lat %>
</p>

<p>
  <strong>Wp1 lon:</strong>
  <%= @touring_route.wp1_lon %>
</p>

<p>
  <strong>Wp2 lat:</strong>
  <%= @touring_route.wp2_lat %>
</p>

<p>
  <strong>Wp2 lon:</strong>
  <%= @touring_route.wp2_lon %>
</p>

<p>
  <strong>Wp3 lat:</strong>
  <%= @touring_route.wp3_lat %>
</p>

<p>
  <strong>Wp3 lon:</strong>
  <%= @touring_route.wp3_lon %>
</p>

<p>
  <strong>Created at:</strong>
  <%= @touring_route.created_at %>
</p>

<p>
  <strong>Updated at:</strong>
  <%= @touring_route.updated_at %>
</p>

<div id="map" style=" width: 800px; height: 500px"></div>

<%= render 'comments/form', comment: @comment %>

<% @touring_route.comments.each do |comment| %>
  <p>
    <strong>Comment:</strong>
    <%= comment.comment %>
  </p>
<% end %>

<%= link_to 'Edit', edit_touring_route_path(@touring_route) %> |
<%= link_to 'Back', touring_routes_path %>


<script>
(async() => {
  // json を読み込む
  console.log("json axios start!")
  const res = await axios.get('/touring_routes/<%= @touring_route.id %>.json').catch(() => {
    console.error('データの取得に失敗')
    return null
  })
  //マップの初期化表示
  initMap(res)
})()

function initMap(routes) {
    console.table(routes)
    // ルート検索の条件
    var request = {
        origin: new google.maps.LatLng(routes.data.start_lat,routes.data.start_lon), // 出発地
        destination: new google.maps.LatLng(routes.data.end_lat,routes.data.end_lon), // 目的地
        waypoints: [ // 経由地点(指定なしでも可)
            { location: new google.maps.LatLng(routes.data.wp1_lat,routes.data.wp1_lon) },
            { location: new google.maps.LatLng(routes.data.wp2_lat,routes.data.wp2_lon) },
            { location: new google.maps.LatLng(routes.data.wp3_lat,routes.data.wp3_lon) },
        ],
        travelMode: google.maps.DirectionsTravelMode.WALKING, // 交通手段(歩行。DRIVINGの場合は車)
    };

    // マップの中心計算
    let view_center_lat = (routes.data.start_lat + routes.data.end_lat) / 2
    let view_center_lon = (routes.data.start_lon + routes.data.end_lon) / 2

    // マップの生成
    var map = new google.maps.Map(document.getElementById("map"), {
        center: new google.maps.LatLng(view_center_lat,view_center_lon), // マップの中心
        zoom: 9 // ズームレベル
    });

    var d = new google.maps.DirectionsService(); // ルート検索オブジェクト
    var r = new google.maps.DirectionsRenderer({ // ルート描画オブジェクト
        map: map, // 描画先の地図
        preserveViewport: true, // 描画後に中心点をずらさない
    });
    // ルート検索
    d.route(request, function(result, status){
        // OKの場合ルート描画
        if (status == google.maps.DirectionsStatus.OK) {
            r.setDirections(result);
        }
    });
}
</script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyATAz-WoDt8oJiahKPcbqgMMOCtihvSJAQ" async defer></script>
